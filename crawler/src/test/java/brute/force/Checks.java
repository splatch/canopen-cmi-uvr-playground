package brute.force;

import org.apache.commons.codec.binary.Hex;
import org.apache.plc4x.java.cmi.readwrite.DisplayPage;
import org.apache.plc4x.java.cmi.readwrite.DisplayPages;
import org.apache.plc4x.java.cmi.readwrite.IndexAddress;
import org.apache.plc4x.java.cmi.readwrite.io.DisplayPagesIO;
import org.apache.plc4x.java.spi.generation.ReadBuffer;

public class Checks {

  public static void main(String[] args) throws Exception {
    String data = "6000000000010000000000009a610000bab8a05c0000000020000050010100582001005002020058200200500303005820030050040400582004005005050058200500500606005820060050070700582007005008080058200800500903855a200900500a0a0058200a00500b0b0058200b00500c0c0058200c00500d0e005800000000";
    System.out.println("Page: 5800 00");
    for (DisplayPage page : parse(data).getPages()) {
      System.out.println("separator " + Integer.toHexString(page.getMarker()) + " " + Integer.toHexString(page.getSeparator())
          + " href=" + hexAddress(page.getLink()) + " text=" + hexAddress(page.getText()));
    }

//    data = "6000000000070000000000009a610000bab8a05c0000000030060050612400580624005820077050010000006100855a0600855a20276c5001000000612000580720005820046c5001000000612100580721005820066c5001000000612200580822005820056c5001000000612300580823005820076c500100000000000000";
//    System.out.println("Page: 5800 02");
//    for (DisplayPage page : parse(data).getPages()) {
//      System.out.println("separator " + Integer.toHexString(page.getMarker()) + " " + Integer.toHexString(page.getSeparator())
//          + " href=" + hexAddress(page.getLink()) + " text=" + hexAddress(page.getText()));
//    }

    System.out.println("Page: 5800 02");
    data = "6000000000070000000000009a610000bab8a05c0000000030010050020005582000e05521005020a100522001000000020105582001e05521015020a101522001000000020205582002e05521025020a102522001000000020305582003e05521035020a103522001000000020405582004e05521045020a104522001000000020505582005e05501000000020605582006e05501000000020705582007e05501000000020805582008e05501000000020905582009e05501000000020a0558200ae05501000000020b0558200be05501000000020c0558200ce05501000000020d0558200de05501000000020e0558200ee05501000000020f0558200fe0550100000000000000";
    for (DisplayPage page : parse(data).getPages()) {
      System.out.println("separator " + Integer.toHexString(page.getMarker()) + " " + Integer.toHexString(page.getSeparator())
          + " href=" + hexAddress(page.getLink()) + " text=" + hexAddress(page.getText()));
    }

    System.out.println("Page: 5800 03");
    data = "6000000000070000000000009a610000bab8a05c00000000300200500500055a2000e15522001424010000000501055a2001e15522011424010000000502055a2002e155010000000503055a2003e155010000000504055a2004e155010000000505055a2005e155010000000506055a2006e155010000000507055a2007e155010000000508055a2008e155010000000509055a2009e15501000000050a055a200ae15501000000050b055a200be15501000000050c055a200ce15501000000050d055a200de15501000000050e055a200ee15501000000050f055a200fe155010000000510055a2010e155010000000511055a2011e155010000000512055a2012e155010000000513055a2013e155010000000514055a2014e155010000000515055a2015e155010000000516055a2016e155010000000517055a2017e155010000000518055a2018e155010000000519055a2019e15501000000051a055a201ae15501000000051b055a201be15501000000051c055a201ce15501000000051d055a201de15501000000051e055a201ee15501000000051f055a201fe155010000000520055a2020e155010000000521055a2021e155010000000522055a2022e155010000000523055a2023e155010000000524055a2024e155010000000525055a2025e155010000000526055a2026e155010000000527055a2027e155010000000528055a2028e155010000000529055a2029e15501000000052a055a202ae15501000000052b055a202be15501000000052c055a202ce15501000000052d055a202de15501000000052e055a202ee15501000000052f055a202fe155010000000530055a2030e155010000000531055a2031e155010000000532055a2032e155010000000533055a2033e155010000000534055a2034e155010000000535055a2035e155010000000536055a2036e155010000000537055a2037e155010000000538055a2038e155010000000539055a2039e15501000000053a055a203ae15501000000053b055a203be15501000000053c055a203ce15501000000053d055a203de15501000000053e055a203ee15501000000053f055a203fe1550100000000000000";
    for (DisplayPage page : parse(data).getPages()) {
      System.out.println("separator " + Integer.toHexString(page.getMarker()) + " " + Integer.toHexString(page.getSeparator())
          + " href=" + hexAddress(page.getLink()) + " text=" + hexAddress(page.getText()));
    }

    System.out.println("Page: 5800 04");
    data = "6000000000070000000000009a610000bab8a05c000000003003005061004858030045582000e255a000d0202200da200100000061014858030145582001e255a001d0202201da200100000061024858030245582002e255a002d0202202da2001000000030345582003e25501000000030445582004e25501000000030545582005e25501000000030645582006e25501000000030745582007e25501000000030845582008e25501000000030945582009e25501000000030a4558200ae25501000000030b4558200be25501000000030c4558200ce25501000000030d4558200de25501000000030e4558200ee25501000000030f4558200fe25501000000620000000604855a200e21500100000000000000";
    for (DisplayPage page : parse(data).getPages()) {
      System.out.println("separator " + Integer.toHexString(page.getMarker()) + " " + Integer.toHexString(page.getSeparator())
          + " href=" + hexAddress(page.getLink()) + " text=" + hexAddress(page.getText()));
    }
  }

  private static String hexAddress(IndexAddress address) {
    return Integer.toHexString(address.getIndex()) + "/" + Integer.toHexString(address.getSubIndex());
  }

  private static DisplayPages parse(String data) throws Exception {
    ReadBuffer buffer = new ReadBuffer(Hex.decodeHex(data.toCharArray()), true);
    return DisplayPagesIO.staticParse(buffer);
  }

}
